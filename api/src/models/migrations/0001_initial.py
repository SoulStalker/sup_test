# Generated by Django 5.1.2 on 2024-11-02 16:58

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_name",
                                message="Допускаются только буквы латиницы и кириллицы",
                                regex="^[a-zA-Zа-яА-Я\\s]*$",
                            )
                        ],
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "db_table": "category",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Название")),
                ("slug", models.SlugField(unique=True, verbose_name="Ссылка")),
                (
                    "color",
                    models.IntegerField(
                        help_text="Введите цвет в формате 6 цифр.",
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_color",
                                message="Цвет должен состоять из 6 цифр.",
                                regex="^\\d{6}$",
                            )
                        ],
                        verbose_name="Цвет",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
            },
        ),
        migrations.CreateModel(
            name="Meet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Допускаются только буквы и пробел",
                                regex="^[а-яА-ЯёЁa-zA-Z]+(?:\\s[а-яА-ЯёЁa-zA-Z]+)*$",
                            )
                        ],
                        verbose_name="Название",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Дата"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_meets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="models.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "responsible",
                    models.ForeignKey(
                        default=models.ForeignKey(
                            null=True,
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name="author_meets",
                            to=settings.AUTH_USER_MODEL,
                            verbose_name="Автор",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responsible_meets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ответственный",
                    ),
                ),
            ],
            options={
                "verbose_name": "Мит",
                "verbose_name_plural": "Миты",
                "db_table": "meets",
                "ordering": ["start_time", "category", "title"],
            },
        ),
        migrations.CreateModel(
            name="MeetParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PRESENT", "Присутствует"),
                            ("ABSENT", "Отсутствует"),
                            ("WARNED", "Предупредил"),
                        ],
                        default="PRESENT",
                        max_length=10,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "custom_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="custom_meets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Участник",
                    ),
                ),
                (
                    "meet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="models.meet",
                        verbose_name="Мит",
                    ),
                ),
            ],
            options={
                "verbose_name": "Участник мита",
                "verbose_name_plural": "Участники мита",
                "db_table": "custom_user_meet",
                "unique_together": {("meet", "custom_user")},
            },
        ),
        migrations.AddField(
            model_name="meet",
            name="participants",
            field=models.ManyToManyField(
                related_name="meets",
                through="models.MeetParticipant",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Участники",
            ),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Допускаются только буквы и пробел",
                                regex="^[а-яА-ЯёЁa-zA-Z]+(?:\\s[а-яА-ЯёЁa-zA-Z]+)*$",
                            )
                        ],
                        verbose_name="Название",
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Ссылка")),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="project_logos",
                        verbose_name="Логотип",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=500, null=True, verbose_name="Описание"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("В обсуждении", "В обсуждении"),
                            ("В разработке", "В разработке"),
                            ("В поддержке", "В поддержке"),
                        ],
                        default="В обсуждении",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="project_participants",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Участники",
                    ),
                ),
                (
                    "responsible",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects_responsibles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ответственный",
                    ),
                ),
            ],
            options={
                "verbose_name": "Проект",
                "verbose_name_plural": "Проекты",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="features",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Допускаются только буквы и пробел",
                                regex="^[а-яА-ЯёЁa-zA-Z]+(?:\\s[а-яА-ЯёЁa-zA-Z]+)*$",
                            )
                        ],
                        verbose_name="Название",
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Ссылка")),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=10000, null=True, verbose_name="Описание"
                    ),
                ),
                (
                    "importance",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=1000000
                            )
                        ],
                        verbose_name="Важность",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Новая", "Новая"),
                            ("Разработка", "Разработка"),
                            ("Тестирование", "Тестирование"),
                            ("Готов", "Готов"),
                        ],
                        default="Новая",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                ("date_created", models.DateTimeField(default=None, editable=False)),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="features_participants",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Исполнители",
                    ),
                ),
                (
                    "responsible",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features_responsibles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ответственный",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features_projects",
                        to="models.project",
                        verbose_name="Проект",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="features_tags",
                        to="models.tags",
                        verbose_name="Теги",
                    ),
                ),
            ],
            options={
                "verbose_name": "Фича",
                "verbose_name_plural": "Фичи",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Допускаются только буквы и пробел",
                                regex="^[а-яА-ЯёЁa-zA-Z]+(?:\\s[а-яА-ЯёЁa-zA-Z]+)*$",
                            )
                        ],
                        verbose_name="Название",
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Ссылка")),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=10000, null=True, verbose_name="Описание"
                    ),
                ),
                (
                    "importance",
                    models.PositiveIntegerField(
                        default=0,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=1000000
                            )
                        ],
                        verbose_name="Важность",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Новая", "Новая"),
                            ("Разработка", "Разработка"),
                            ("Тестирование", "Тестирование"),
                            ("Готов", "Готов"),
                            ("Бэклог", "Бэклог"),
                        ],
                        default="Новая",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                ("date_execution", models.DateField(verbose_name="Дата исполнения")),
                (
                    "features",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_features",
                        to="models.features",
                        verbose_name="Фича",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_authors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="task_participants",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Исполнители",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="task_tags", to="models.tags", verbose_name="Теги"
                    ),
                ),
            ],
            options={
                "verbose_name": "Задача",
                "verbose_name_plural": "Задачи",
            },
        ),
    ]
